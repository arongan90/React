{"ast":null,"code":"var _jsxFileName = \"/Users/parkdonghan/Desktop/React/styling-with-css-module/src/components/Button.js\";\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { darken, lighten } from \"polished\";\nconst colorStyles = css`\n  ${({\n  theme,\n  color\n}) => {\n  const selected = theme.palette[color];\n  return css`\n      background: ${selected};\n      &:hover {\n        background: ${lighten(0.1, selected)};\n      }\n      &:active {\n        background: ${darken(0.1, selected)};\n      }\n      ${props => props.outline && css`\n          color: ${selected};\n          background: none;\n          border: 1px solid ${selected};\n          &:hover {\n            background: ${selected};\n            color: white;\n          }\n        `}\n    `;\n}}\n`;\nconst sizes = {\n  large: {\n    height: \"3rem\",\n    fontSize: \"1.25rem\"\n  },\n  medium: {\n    height: \"2.25rem\",\n    fontSize: \"1rem\"\n  },\n  small: {\n    height: \"1.75rem\",\n    fontSize: \"0.875rem\"\n  }\n};\nconst sizeStyles = css`\n  /* 크기 */\n  ${({\n  size\n}) => css`\n    height: ${sizes[size].height};\n    font-size: ${sizes[size].fontSize};\n  `}\n`;\nconst StyledButton = styled.button`\n  /* 공통 스타일 */\n  // display: inline-flex;\n  border: none;\n  outline: none;\n  border-radius: 4px;\n  color: white;\n  font-weight: bold;\n  cursor: pointer;\n  padding-left: 1rem;\n  padding-right: 1rem;\n\n  /* 크기 */\n  ${sizeStyles}\n\n  /* 색상 */\n  ${colorStyles}\n\n  /* 기타 */\n  & + & {\n    margin-left: 1rem;\n  }\n`;\n\nfunction Button({\n  children,\n  color,\n  size,\n  outline,\n  fullWidth,\n  ...rest\n}) {\n  return /*#__PURE__*/React.createElement(StyledButton, Object.assign({\n    color: color,\n    size: size,\n    outline: outline,\n    fullWidth: fullWidth\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }), children);\n}\n\nButton.defaultProps = {\n  color: \"blue\",\n  size: \"medium\"\n};\nexport default Button;","map":{"version":3,"sources":["/Users/parkdonghan/Desktop/React/styling-with-css-module/src/components/Button.js"],"names":["React","styled","css","darken","lighten","colorStyles","theme","color","selected","palette","props","outline","sizes","large","height","fontSize","medium","small","sizeStyles","size","StyledButton","button","Button","children","fullWidth","rest","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,UAAhC;AAEA,MAAMC,WAAW,GAAGH,GAAI;IACpB,CAAC;AAAEI,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAsB;AACtB,QAAMC,QAAQ,GAAGF,KAAK,CAACG,OAAN,CAAcF,KAAd,CAAjB;AACA,SAAOL,GAAI;oBACKM,QAAS;;sBAEPJ,OAAO,CAAC,GAAD,EAAMI,QAAN,CAAgB;;;sBAGvBL,MAAM,CAAC,GAAD,EAAMK,QAAN,CAAgB;;QAEnCE,KAAD,IACAA,KAAK,CAACC,OAAN,IACAT,GAAI;mBACOM,QAAS;;8BAEEA,QAAS;;0BAEbA,QAAS;;;SAGzB;KAlBN;AAoBD,CAAC;CAvBJ;AA0BA,MAAMI,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,MADH;AAELC,IAAAA,QAAQ,EAAE;AAFL,GADK;AAKZC,EAAAA,MAAM,EAAE;AACNF,IAAAA,MAAM,EAAE,SADF;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GALI;AASZE,EAAAA,KAAK,EAAE;AACLH,IAAAA,MAAM,EAAE,SADH;AAELC,IAAAA,QAAQ,EAAE;AAFL;AATK,CAAd;AAeA,MAAMG,UAAU,GAAGhB,GAAI;;IAEnB,CAAC;AAAEiB,EAAAA;AAAF,CAAD,KAAcjB,GAAI;cACRU,KAAK,CAACO,IAAD,CAAL,CAAYL,MAAO;iBAChBF,KAAK,CAACO,IAAD,CAAL,CAAYJ,QAAS;GAClC;CALJ;AAQA,MAAMK,YAAY,GAAGnB,MAAM,CAACoB,MAAO;;;;;;;;;;;;;IAa/BH,UAAW;;;IAGXb,WAAY;;;;;;CAhBhB;;AAwBA,SAASiB,MAAT,CAAgB;AAAEC,EAAAA,QAAF;AAAYhB,EAAAA,KAAZ;AAAmBY,EAAAA,IAAnB;AAAyBR,EAAAA,OAAzB;AAAkCa,EAAAA,SAAlC;AAA6C,KAAGC;AAAhD,CAAhB,EAAwE;AACtE,sBACE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAElB,KADT;AAEE,IAAA,IAAI,EAAEY,IAFR;AAGE,IAAA,OAAO,EAAER,OAHX;AAIE,IAAA,SAAS,EAAEa;AAJb,KAKMC,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOGF,QAPH,CADF;AAWD;;AAEDD,MAAM,CAACI,YAAP,GAAsB;AACpBnB,EAAAA,KAAK,EAAE,MADa;AAEpBY,EAAAA,IAAI,EAAE;AAFc,CAAtB;AAKA,eAAeG,MAAf","sourcesContent":["import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { darken, lighten } from \"polished\";\n\nconst colorStyles = css`\n  ${({ theme, color }) => {\n    const selected = theme.palette[color];\n    return css`\n      background: ${selected};\n      &:hover {\n        background: ${lighten(0.1, selected)};\n      }\n      &:active {\n        background: ${darken(0.1, selected)};\n      }\n      ${(props) =>\n        props.outline &&\n        css`\n          color: ${selected};\n          background: none;\n          border: 1px solid ${selected};\n          &:hover {\n            background: ${selected};\n            color: white;\n          }\n        `}\n    `;\n  }}\n`;\n\nconst sizes = {\n  large: {\n    height: \"3rem\",\n    fontSize: \"1.25rem\",\n  },\n  medium: {\n    height: \"2.25rem\",\n    fontSize: \"1rem\",\n  },\n  small: {\n    height: \"1.75rem\",\n    fontSize: \"0.875rem\",\n  },\n};\n\nconst sizeStyles = css`\n  /* 크기 */\n  ${({ size }) => css`\n    height: ${sizes[size].height};\n    font-size: ${sizes[size].fontSize};\n  `}\n`;\n\nconst StyledButton = styled.button`\n  /* 공통 스타일 */\n  // display: inline-flex;\n  border: none;\n  outline: none;\n  border-radius: 4px;\n  color: white;\n  font-weight: bold;\n  cursor: pointer;\n  padding-left: 1rem;\n  padding-right: 1rem;\n\n  /* 크기 */\n  ${sizeStyles}\n\n  /* 색상 */\n  ${colorStyles}\n\n  /* 기타 */\n  & + & {\n    margin-left: 1rem;\n  }\n`;\n\nfunction Button({ children, color, size, outline, fullWidth, ...rest }) {\n  return (\n    <StyledButton\n      color={color}\n      size={size}\n      outline={outline}\n      fullWidth={fullWidth}\n      {...rest}\n    >\n      {children}\n    </StyledButton>\n  );\n}\n\nButton.defaultProps = {\n  color: \"blue\",\n  size: \"medium\",\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}