{"ast":null,"code":"var _jsxFileName = \"/Users/parkdonghan/Desktop/React/styling-with-css-module/src/components/Dialog.js\";\nimport React, { useState } from \"react\";\nimport styled, { keyframes, css } from \"styled-components\";\nimport Button from \"./Button\";\nimport { useEffect } from \"react\";\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\nconst fadeOut = keyframes`\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n`;\nconst slideUp = keyframes`\n  from {\n    transform: translateY(200px);\n  }\n  to {\n    transform: translateY(0px);\n  }\n`;\nconst DarkBackground = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(0, 0, 0, 0.8);\n\n  animation-duration: 0.25s;\n  animation-timing-function: ease-out;\n  animaition-name: ${fadeIn};\n  animaition-fill-mode: forwards;\n\n  ${props => props.disappear && css`\n      animation-name: ${fadeOut};\n    `}\n`;\nconst DialogBlock = styled.div`\n  width: 320px;\n  padding: 1.5rem;\n  background: white;\n  border-radius: 2px;\n\n  h3 {\n    margin: 0;\n    font-size: 1.5rem;\n  }\n\n  p {\n    font-size: 1.125rem;\n  }\n\n  animation-duration: 0.25s;\n  animation-timing-function: ease-out;\n  animation-name: ${slideUp};\n  animation-fill-mode: forwards;\n`;\nconst ButtonGroup = styled.div`\n  margin-top: 3rem;\n  display: flex;\n  justify-content: flex-end;\n`;\nconst ShortMarginButton = styled(Button)`\n  & + & {\n    margin-left: 0.7rem;\n  }\n`;\n\nfunction Diallog({\n  title,\n  children,\n  confirmText,\n  cancelText,\n  onConfirm,\n  onCancel,\n  visible\n}) {\n  const [animate, setAnimate] = useState(false);\n  const [localVisible, setLocalVisible] = useState(visible);\n  useEffect(() => {\n    // visible 값이 true -> false 되는 것을 감지\n    if (localVisible && !visible) {\n      setAnimate(true);\n      setTimeout(() => setAnimate(false), 250);\n    }\n\n    setLocalVisible(visible);\n  }, [localVisible, visible]);\n  if (!animate && !localVisible) return null;\n  return /*#__PURE__*/React.createElement(DarkBackground, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, children), /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ShortMarginButton, {\n    color: \"gray\",\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, cancelText), /*#__PURE__*/React.createElement(ShortMarginButton, {\n    color: \"pink\",\n    onClick: onConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, confirmText))));\n}\n\nDialogBlock.defaultProps = {\n  cancelText: \"취소\",\n  confirmText: \"확인\"\n};\nexport default Diallog;","map":{"version":3,"sources":["/Users/parkdonghan/Desktop/React/styling-with-css-module/src/components/Dialog.js"],"names":["React","useState","styled","keyframes","css","Button","useEffect","fadeIn","fadeOut","slideUp","DarkBackground","div","props","disappear","DialogBlock","ButtonGroup","ShortMarginButton","Diallog","title","children","confirmText","cancelText","onConfirm","onCancel","visible","animate","setAnimate","localVisible","setLocalVisible","setTimeout","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,SAAjB,EAA4BC,GAA5B,QAAuC,mBAAvC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,MAAMC,MAAM,GAAGJ,SAAU;;;;;;;CAAzB;AASA,MAAMK,OAAO,GAAGL,SAAU;;;;;;;CAA1B;AASA,MAAMM,OAAO,GAAGN,SAAU;;;;;;;CAA1B;AASA,MAAMO,cAAc,GAAGR,MAAM,CAACS,GAAI;;;;;;;;;;;;;qBAabJ,MAAO;;;IAGvBK,KAAD,IACAA,KAAK,CAACC,SAAN,IACAT,GAAI;wBACgBI,OAAQ;KAC1B;CApBN;AAuBA,MAAMM,WAAW,GAAGZ,MAAM,CAACS,GAAI;;;;;;;;;;;;;;;;;oBAiBXF,OAAQ;;CAjB5B;AAqBA,MAAMM,WAAW,GAAGb,MAAM,CAACS,GAAI;;;;CAA/B;AAMA,MAAMK,iBAAiB,GAAGd,MAAM,CAACG,MAAD,CAAS;;;;CAAzC;;AAMA,SAASY,OAAT,CAAiB;AACfC,EAAAA,KADe;AAEfC,EAAAA,QAFe;AAGfC,EAAAA,WAHe;AAIfC,EAAAA,UAJe;AAKfC,EAAAA,SALe;AAMfC,EAAAA,QANe;AAOfC,EAAAA;AAPe,CAAjB,EAQG;AACD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBzB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAC0B,YAAD,EAAeC,eAAf,IAAkC3B,QAAQ,CAACuB,OAAD,CAAhD;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIqB,YAAY,IAAI,CAACH,OAArB,EAA8B;AAC5BE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,MAAAA,UAAU,CAAC,MAAMH,UAAU,CAAC,KAAD,CAAjB,EAA0B,GAA1B,CAAV;AACD;;AACDE,IAAAA,eAAe,CAACJ,OAAD,CAAf;AACD,GAPQ,EAON,CAACG,YAAD,EAAeH,OAAf,CAPM,CAAT;AAQA,MAAI,CAACC,OAAD,IAAY,CAACE,YAAjB,EAA+B,OAAO,IAAP;AAC/B,sBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,KAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,QAAJ,CAFF,eAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,MAAzB;AAAgC,IAAA,OAAO,EAAEI,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,UADH,CADF,eAIE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,MAAzB;AAAgC,IAAA,OAAO,EAAEC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,WADH,CAJF,CAHF,CADF,CADF;AAgBD;;AAEDN,WAAW,CAACgB,YAAZ,GAA2B;AACzBT,EAAAA,UAAU,EAAE,IADa;AAEzBD,EAAAA,WAAW,EAAE;AAFY,CAA3B;AAKA,eAAeH,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styled, { keyframes, css } from \"styled-components\";\nimport Button from \"./Button\";\nimport { useEffect } from \"react\";\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nconst fadeOut = keyframes`\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n`;\n\nconst slideUp = keyframes`\n  from {\n    transform: translateY(200px);\n  }\n  to {\n    transform: translateY(0px);\n  }\n`;\n\nconst DarkBackground = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(0, 0, 0, 0.8);\n\n  animation-duration: 0.25s;\n  animation-timing-function: ease-out;\n  animaition-name: ${fadeIn};\n  animaition-fill-mode: forwards;\n\n  ${(props) =>\n    props.disappear &&\n    css`\n      animation-name: ${fadeOut};\n    `}\n`;\n\nconst DialogBlock = styled.div`\n  width: 320px;\n  padding: 1.5rem;\n  background: white;\n  border-radius: 2px;\n\n  h3 {\n    margin: 0;\n    font-size: 1.5rem;\n  }\n\n  p {\n    font-size: 1.125rem;\n  }\n\n  animation-duration: 0.25s;\n  animation-timing-function: ease-out;\n  animation-name: ${slideUp};\n  animation-fill-mode: forwards;\n`;\n\nconst ButtonGroup = styled.div`\n  margin-top: 3rem;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst ShortMarginButton = styled(Button)`\n  & + & {\n    margin-left: 0.7rem;\n  }\n`;\n\nfunction Diallog({\n  title,\n  children,\n  confirmText,\n  cancelText,\n  onConfirm,\n  onCancel,\n  visible,\n}) {\n  const [animate, setAnimate] = useState(false);\n  const [localVisible, setLocalVisible] = useState(visible);\n\n  useEffect(() => {\n    // visible 값이 true -> false 되는 것을 감지\n    if (localVisible && !visible) {\n      setAnimate(true);\n      setTimeout(() => setAnimate(false), 250);\n    }\n    setLocalVisible(visible);\n  }, [localVisible, visible]);\n  if (!animate && !localVisible) return null;\n  return (\n    <DarkBackground>\n      <DialogBlock>\n        <h3>{title}</h3>\n        <p>{children}</p>\n        <ButtonGroup>\n          <ShortMarginButton color=\"gray\" onClick={onCancel}>\n            {cancelText}\n          </ShortMarginButton>\n          <ShortMarginButton color=\"pink\" onClick={onConfirm}>\n            {confirmText}\n          </ShortMarginButton>\n        </ButtonGroup>\n      </DialogBlock>\n    </DarkBackground>\n  );\n}\n\nDialogBlock.defaultProps = {\n  cancelText: \"취소\",\n  confirmText: \"확인\",\n};\n\nexport default Diallog;\n"]},"metadata":{},"sourceType":"module"}